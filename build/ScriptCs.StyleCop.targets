<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <StyleCopAssembly Include="$(SolutionDir)packages\StyleCop.*\**\StyleCop.dll" />
  </ItemGroup>

  <PropertyGroup>
    <StyleCopMsBuildRunner>@(StyleCopAssembly)</StyleCopMsBuildRunner>
  </PropertyGroup>

  <UsingTask AssemblyFile="@(StyleCopAssembly)" TaskName="StyleCop.StyleCopTask"
             Condition=" '@(StyleCopAssembly -> Count())' == '1' " />

  <PropertyGroup Condition=" '$(RunStyleAnalysis)' != 'false' And '$(StyleCopMsBuildRunner)' != '' ">
    <PrepareForRunDependsOn>$(PrepareForRunDependsOn);StyleCop</PrepareForRunDependsOn>
  </PropertyGroup>

  <PropertyGroup>
    <StyleCopForceFullAnalysis Condition=" '$(StyleCopForceFullAnalysis)' == '' ">false</StyleCopForceFullAnalysis>
    <StyleCopCacheResults Condition=" '$(StyleCopCacheResults)' == '' ">true</StyleCopCacheResults>
    <StyleCopTreatErrorsAsWarnings Condition=" '$(StyleCopTreatErrorsAsWarnings)' == '' ">true</StyleCopTreatErrorsAsWarnings>
    <StyleCopOutputFile Condition=" '$(StyleCopOutputFile)' == '' ">$(IntermediateOutputPath)StyleCopViolations.xml</StyleCopOutputFile>
    <StyleCopSuccessMarkerFile Condition=" '$(StyleCopSuccessMarkerFile)' == '' ">$(IntermediateOutputPath)StyleCop.success</StyleCopSuccessMarkerFile>
    <!-- Specifying 0 will cause StyleCop to use the default violation count limit.
         Specifying any positive number will cause StyleCop to use that number as the violation count limit.
         Specifying any negative number will cause StyleCop to allow any number of violations without limit. -->
    <StyleCopMaxViolationCount Condition=" '$(StyleCopMaxViolationCount)' == '' ">1</StyleCopMaxViolationCount>
  </PropertyGroup>

  <Target Name="StyleCop" Inputs="@(Compile)" Outputs="$(StyleCopSuccessMarkerFile)" Condition=" '@(StyleCopAssembly)' != '' ">
    <Error Text="Multiple StyleCop copies detected. Please clean out your packages folder and try again."
           Condition=" '@(StyleCopAssembly -> Count())' != '1' " />

    <Delete Files="$(StyleCopSuccessMarkerFile)" Condition=" Exists('$(StyleCopSuccessMarkerFile)') " />

    <!-- Determine what files should be checked. Take all Compile items, but exclude those that have
        set ExcludeFromStyleCop=true or ExcludeFromSourceAnalysis=true. -->
    <ItemGroup>
      <StyleCopFiles Include="@(Compile)" Condition=" '%(Compile.ExcludeFromStyleCop)' != 'true' and '%(Compile.ExcludeFromSourceAnalysis)' != 'true'" />
      <StyleCopExcludedFiles Include="@(Compile)" Condition=" '%(Compile.ExcludeFromStyleCop)' == 'true' or '%(Compile.ExcludeFromSourceAnalysis)' == 'true'" />
    </ItemGroup>

    <Message Text="Analyzing @(StyleCopFiles -> Count()) of @(Compile -> Count()) source files." Importance="Normal" />

    <Message Text="@(StyleCopFiles)" Importance="Low" />

    <Message Text="Excluding @(StyleCopExcludedFiles)" Importance="Normal" Condition=" '@(StyleCopExcludedFiles)' != '' "/>
    
    <!-- Run the StyleCop MSBuild task. -->
    <StyleCopTask
      ProjectFullPath="$(MSBuildProjectDirectory)"
      SourceFiles="@(StyleCopFiles)"
      ForceFullAnalysis="$(StyleCopForceFullAnalysis)"
      DefineConstants="$(DefineConstants)"
      TreatErrorsAsWarnings="$(StyleCopTreatErrorsAsWarnings)"
      CacheResults="$(StyleCopCacheResults)"
      OverrideSettingsFile="$(StyleCopOverrideSettingsFile)"
      OutputFile="$(StyleCopOutputFile)"
      MaxViolationCount="$(StyleCopMaxViolationCount)" />

    <!-- Make output files cleanable -->
    <ItemGroup>
      <FileWrites Include="$(StyleCopOutputFile)" />
      <FileWrites Include="$(StyleCopSuccessMarkerFile)" />
    </ItemGroup>

    <Touch Files="$(StyleCopSuccessMarkerFile)" AlwaysCreate="true" Condition=" '$(MSBuildBinPath)' == '' " />

    <!-- Add the StyleCop.cache file to the list of files we've written - so they can be cleaned up on a Build Clean. -->
    <CreateItem Include="StyleCop.Cache" Condition=" '$(StyleCopCacheResults)' == 'true' ">
      <Output TaskParameter="Include" ItemName="FileWrites" />
    </CreateItem>
  </Target>

  <Target Name="_DeleteMarkerFile" BeforeTargets="StyleCop" Condition=" '$(StyleCopForceFullAnalysis)' == 'true' ">
    <Delete Files="$(StyleCopSuccessMarkerFile)" Condition=" Exists('$(StyleCopSuccessMarkerFile)') " />
  </Target>
</Project>